{"pages":[],"posts":[{"title":"学习日志","text":"2022-07-07 学习数据结构-树-二叉树 修改博客 通过上传图片至Github仓库，通过网络连接调用 ![照片名称](https://birdplus.github.io/img/postimg/XXX.png) ![照片名称][1][1]:https://birdplus.github.io/img/postimg/XXX.png 2022-07-08 发现自己连数据结构入门测试题都不会做，打算回去写菜鸟教程上的C语言练习100例","link":"/2022/07/07/%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6/"},{"title":"待实现","text":"树递归遍历 先序遍历12345678void PreOrderTraversal(BinTree BT){ if(BT){ printf(&quot;%d&quot;, BT -&gt; Data); PreOrderTraveral(BT -&gt; Left); PreOrderTraveral(Bt -&gt; Right); }} 中序遍历12345678void InOrderTraversal(BinTree BT){ if(BT){ InOrderTraversal(BT -&gt; Left); printf(&quot;%d&quot;, BT -&gt; Data); InOrderTraversal(BT -&gt; Right); }} 后序遍历12345678void PostOrderTraversal(BinTree BT){ if(BT){ InOrderTraversal(BT -&gt; Left); InOrderTraversal(BT -&gt; Right); printf(&quot;%d&quot;, BT -&gt; Data); }} 非递归遍历 先序遍历1234567891011121314151617void InOrderTraversal(BinTree BT){ BinTree T, BT; Stack S = CreatStack(MaxSize); /*创建并初始化堆栈S*/ while(T || !IsEmpty(S)){ while(T){ /*一直向左并将沿途结点压入堆栈*/ Push(S,T); T = T -&gt; Left; } if(!IsEmpty(S)){ T = Pop(S); printf(&quot;%5d&quot;, T -&gt; Data); T = T -&gt; Right; } }} 中序遍历 后序遍历","link":"/2022/07/07/%E5%BE%85%E5%AE%9E%E7%8E%B0/"},{"title":"C语言练习100例","text":"001 题目：有 1、2、3、4 四个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？程序分析：可填在百位、十位、个位的数字都是 1、2、3、4，组成所有的排列后再去掉不满足条件的排列。 12345678910111213141516# include&lt;stdio.h&gt;int main(){ int i, j, k; printf(&quot;\\n&quot;); for(i = 1; i &lt; 5; i++){ for(j = 1; j &lt; 5; j++){ for(k = 1; k &lt; 5; k++){ if(i != j &amp;&amp; i! = k &amp;&amp; j != k){ printf(&quot;%d,%d,%d\\n&quot;,i,j,k); } } } }} 002 题目：企业发放的奖金根据利润提成。 利润(I)低于或等于10万元时，奖金可提10%； 利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%； 20万到40万之间时，高于20万元的部分，可提成5%； 40万到60万之间时高于40万元的部分，可提成3%； 60万到100万之间时，高于60万元的部分，可提成1.5%； 高于100万元时，超过100万元的部分按1%提成。 从键盘输入当月利润I，求应发放奖金总数？程序分析：请利用数轴来分界，定位。注意定义时需把奖金定义成双精度浮点(double)型。 1234567891011121314151617181920212223242526272829# include&lt;stdio.h&gt;int main(){ double i; printf(&quot;你的净利润为（万元）：\\n&quot;); scanf(&quot;%lf&quot;,&amp;i); if (i&lt;0){ return 0; } else if (i&lt;10){ printf(&quot;%lf万元&quot;,i * 0.1); } else if (i&lt;20){ printf(&quot;%lf万元&quot;,1 + (i - 10) * 0.075); } else if (i&lt;40){ printf(&quot;%lf万元&quot;,1.75 + (i - 20) * 0.05); } else if (i&lt;60){ printf(&quot;%lf万元&quot;,2.75 + (i - 40) * 0.03); } else if (i&lt;100){ printf(&quot;%lf万元&quot;,3.35 + (i - 60) * 0.015); } else if (i&gt;100){ printf(&quot;%lf万元&quot;,3.95 + (i - 100) * 0.01); }} 003 题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？ 123456789101112131415161718# include&lt;stdio.h&gt;int main(){ int i,j,m,n,x; for(i = 1; i &lt; 168 / 2 + 1; i++){ if(168 % i == 0){ j = 168 / i; if( i &gt; j &amp;&amp; (i + j) % 2 == 0 &amp;&amp; (i - j) % 2 == 0){ m = (i + j) / 2; n = (i - j) / 2; x = n * n - 100; printf(&quot;%d + 100 = %d * %d\\n&quot;,x,n,n); printf(&quot;%d + 268 = %d * %d\\n&quot;,x,m,m); } } }} 004 题目：输入某年某月某日，判断这一天是这一年的第几天？程序分析：以3月5日为例，应该先把前两个月的加起来，然后再加上5天即本年的第几天，特殊情况，闰年且输入月份大于3时需考虑多加一天。 12345678910111213141516171819202122232425# include&lt;stdio.h&gt;int main(){ int y,m,d,i; printf(&quot;请输入年月日，格式为年-月-日(2000-1-1)\\n&quot;); scanf(&quot;%d-%d-%d&quot;,&amp;y,&amp;m,&amp;d); if(y % 4 == 0 &amp;&amp; m % 2 == 0){ i = m * 30.5 - 1 - 30 + d; } else if(y % 4 == 0 &amp;&amp; m &gt; 1 &amp;&amp; m % 2 != 0){ i = (m - 1) * 30.5 + d - 1; } else if(y % 4 == 0 &amp;&amp; m == 1 &amp;&amp; m % 2 != 0){ i = d;} else if(y % 4 != 0 &amp;&amp; m % 2 == 0){ i = m * 30.5 - 2 - 30 + d; } else if(y % 4 != 0 &amp;&amp; m &gt; 1 &amp;&amp; m % 2 != 0){ i = (m - 1) * 30.5 + d - 2; } else if(y % 4 != 0 &amp;&amp; m == 1 &amp;&amp; m % 2 != 0){ i = d; } printf(&quot;第%d天&quot;,i);} 1234567891011121314151617# include&lt;stdio.h&gt;int main(){ int y,m,d,i = 0; int monthday[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; printf(&quot;请输入年月日，格式为年-月-日(2000-1-1)\\n&quot;); scanf(&quot;%d-%d-%d&quot;,&amp;y,&amp;m,&amp;d); if(y % 400 == 0|| (y % 100 != 0 &amp;&amp; y % 4 == 0)){ monthday[1] = 29; } for(int j = 0; j &lt; m - 1; j++){ i += monthday[j]; } i += d; printf(&quot;第%d天\\n&quot;,i); return 0;} 005 题目：输入三个整数x,y,z，请把这三个数由小到大输出。程序分析：我们想办法把最小的数放到x上，先将x与y进行比较，如果x&gt;y则将x与y的值进行交换，然后再用x与z进行比较，如果x&gt;z则将x与z的值进行交换，这样能使x最小。 12345678910111213141516171819202122int main(){ int x,y,z,n; printf(&quot;请输入三个整数，格式为x-y-z(1-2-3)\\n&quot;); scanf(&quot;%d-%d-%d&quot;,&amp;x,&amp;y,&amp;z); if(x &gt; y){ n = x; x = y; y = n; } if(x &gt; z){ n = x; x = z; z = n; } if(y &gt; z){ n = y; y = z; z = n; } printf(&quot;%d &lt; %d &lt; %d&quot;,x,y,z);}","link":"/2022/07/08/C%E7%BB%83%E4%B9%A0100%E4%BE%8B/"},{"title":"瑄瑄你好！","text":"嗨工作辛苦啦周末赶紧一起出去吃好吃的 2022-07-07 名词解释甘特图 Gantt chart又称为横道图、条状图(Bar chart)。其通过条状图来显示项目、进度和其他时间相关的系统进展的内在关系随着时间进展的情况。以提出者亨利·劳伦斯·甘特（Henry Laurence Gantt）先生的名字命名。","link":"/2022/07/06/%E7%91%84%E7%91%84%E4%BD%A0%E5%A5%BD/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/07/05/hello-world/"},{"title":"博客搭建","text":"人物介绍栏图标 https://blog.csdn.net/u012208219/article/details/106883012","link":"/2022/07/08/%E5%AE%8C%E5%96%84%E5%8D%9A%E5%AE%A2/"},{"title":"树","text":"树的定义由n个节点构成的有限集合 树的性质 树种有一个称为“根（root）”的特殊结点，用r表示： 其余结点可分为m个互不相交的有限集T1，T2…其中每一个集合又是一颗独立的书，成为原来树的“子树（subtree）” 子树不相交 N个节点的树有N-1条边 树的基本术语 结点的度：结点的子树个数 树的度：树种所有结点最大的度 叶结点：度为0的结点 父结点：为子结点的根结点 子结点： 兄弟结点： 祖先结点： 子孙结点： 路径和路径长度：结点个数 结点的层次：规定根结点在1层，其他结点层数为其父结点层次加一 树的深度：树中所有结点的最大层次 树的表示儿子兄弟表示法：二叉树（度为2的树） 树的概念引出 有序化 定义顺序进行查找 二叉树性质二叉树的子树有左右之分 特殊二叉树 斜二叉树 完美二叉树/满二叉树 完全二叉树：编号从上至下左至右顺序跟完美二叉树位置相同，可以在右下部分树不完美（缺失） 存储结构 顺序存储结构 链表存储 重要性质 一个二叉树第 i 层的最大结点数为：2**i-1 ，i&gt;=1 深度为k的二叉树有最大结点总数为： 2**k -1，k&gt;=1 对任何非空二叉树 T，若n₀表示叶结点的个数、n₂是 度为2的非叶结点个数，那么两者满足关系n₀ = n₂ +1(从上到下看和从下往上看得出的等式) 遍历顺序遍历 前序遍历 中序遍历 后序遍历 队列遍历 层次遍历 操作集 判断是非为空 遍历 创建而阐述","link":"/2022/07/07/%E6%A0%91/"}],"tags":[{"name":"Studying","slug":"Studying","link":"/tags/Studying/"},{"name":"练习","slug":"练习","link":"/tags/%E7%BB%83%E4%B9%A0/"},{"name":"基础","slug":"基础","link":"/tags/%E5%9F%BA%E7%A1%80/"},{"name":"数据结构","slug":"数据结构","link":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"categories":[]}